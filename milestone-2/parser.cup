import java_cup.runtime.*;
import java.lang.reflect.*;
import java.util.*;

parser code
{:
    @Override
    public void syntax_error(Symbol cur_token) {
        System.out.println("syntax_error here: " + cur_token.value);
        List<Integer> l = expected_token_ids();
        System.out.println(l);
        super.syntax_error(cur_token);
    }
//    report_fatal_error
//    @Override
//    public void unrecovered_syntax_error(Symbol cur_token) {
//        System.out.println("syntax_error " + cur_token.getClass());
//    }

:}

/* Terminals (tokens returned by the scanner). */
terminal	BF, TITLE, TEXT, SECTION, LABEL, OPERATOR;
terminal  DATE, BEGIN, NM, NEWLINE, SUB_TITLE, MATHMODE;
terminal  BODY, END, PACKAGE, FUNC, ERROR, VAR, MAKE;
terminal  DOC_CLASS, ITEM;

/* Non-terminals */
nonterminal	String   file, document, starters, content;
nonterminal String   item_list, items, item_content;
nonterminal String   mathmode, mathmode_content;




/* The grammar */

file ::= DOC_CLASS PACKAGE BEGIN:t1 document:d END:t2
			  {:RESULT = "" + d;:}
			| error:e
                      {:RESULT = "" + "  --->  file parse error " + e;:}
      ;

document ::= starters:s content:c
            {:RESULT = "" + s + '\n' + c;:}
          | error:e
                      {:RESULT = "" + "  --->  document parse error " + e;:}
          ;

starters ::= TITLE TEXT:title DATE TEXT:date MAKE
            {:RESULT = "" + title + '\n' + date + '\n';:}
          | error:e
                      {:RESULT = "" + "  --->  starters parse error " + e;:}
          ;

content ::= SECTION TEXT:sectionTitle content:c
            {:RESULT = "" + '\n' + sectionTitle + '\n' + c;:}
          | BODY:b content:c
            {:RESULT = "" + b + c;:}
          | NEWLINE content:c
            {:RESULT = "" + "\n newline \n" + c;:}
          | item_list:i content:c
            {:RESULT = "" + i + c;:}
          | mathmode:mm content:c
            {:RESULT = "" + mm + c;:}
          | error:e
                      {:RESULT = "" + "  --->  content parse error " + e;:}
          ;

item_list ::= BEGIN items:i END
              {:RESULT = "" + i;:}
          ;

items ::= ITEM BODY:b items:i
          {:RESULT = "" + b + '\n' + i;:}
        | error:e
                      {:RESULT = "" + "  --->  item parse error " + e;:}
        ;

mathmode ::= MATHMODE mathmode_content:mc MATHMODE
              {:RESULT = "" + mc;:}
            ;

mathmode_content ::= NM:n mathmode_content:mc
                      {:RESULT = "" + n + mc;:}
                    | VAR:v mathmode_content:mc
                      {:RESULT = "" + v + mc;:}
                    | error:e
                      {:RESULT = "" + "  --->  mathmode_content parse error " + e;:}
                    ;

item_content ::= BODY:b item_content
                  {:RESULT = "" + b;:}
                | error:e
                      {:RESULT = "" + "  --->  item_content parse error " + e;:}
                ;


