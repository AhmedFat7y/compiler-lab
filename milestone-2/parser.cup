import java_cup.runtime.*;
import java.lang.reflect.*;
import java.util.*;

parser code
{:
    @Override
    public void syntax_error(Symbol cur_token) {
        System.out.println("syntax_error here: " + cur_token.value);
        List<Integer> l = expected_token_ids();
        System.out.println(l);
        for (int n : l) {
          System.out.println(n);
        }
        super.syntax_error(cur_token);
    }
//    report_fatal_error
//    @Override
//    public void unrecovered_syntax_error(Symbol cur_token) {
//        System.out.println("syntax_error " + cur_token.getClass());
//    }

:}

/* Terminals (tokens returned by the scanner). */
terminal			BF, TITLE, TEXT, SECTION, LABEL, OPERATOR, DATE, BEGIN, NM, NEWLINE, SUB_TITLE, MATHMODE, BODY, END, PACKAGE, FUNC, ERROR, VAR, MAKE, DOC_CLASS, ITEM;

/* Non-terminals */
nonterminal	String	 file;




/* The grammar */

file ::= DOC_CLASS PACKAGE BEGIN:t1 END:t2
			  {:RESULT = t1 + "\n" + t2;:}
			  |  {:RESULT = "no way";:};

