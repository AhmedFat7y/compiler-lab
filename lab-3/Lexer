import java.lang.System;
import java.io.*;

public class Lexer {

	Yylex tokenizer;
	public  Lexer(String fileName)
	{
	  try
	  {
	  tokenizer=new Yylex(new BufferedReader(new FileReader(fileName)));
	  }
	  catch(Exception e)
	  {

	  }
	}
	public Token nextToken()
	{
		Token next=null;
		try
		{
		 next=  tokenizer.getToken();
		}
		catch(Exception e)
		{
		}
		return next;
	}
	}


%%


%function getToken
%type Token
%char
%line
%state TEXT_COMAND, hello, why, what, NOOOO


%{
	//initialize  variables to be used by class
%}


%init{

//Add code to be executed on initialization of the lexer

%init}

START=(\\documentclass\{(.)+\})
PACKAGE=(\\usepackage\[(.)+\]\{(.)+\})
COMMENT=(%(.)*)
BEGIN_DOCUMENT=(\\begin\{document\})
END_DOCUMENT=(\\end\{document\})
TITLE=(\\title)
SUBTITLE=(\\subtitle)
DATE=(\\date)
MAKETITLE=(\\maketitle)
SECTION=(\\section)
TEXTBF=(\\textbf)
TEXT=\{.+\}
BODY=[^%\{\}\[\]\n\\]+
NEWLINE=[\n]

%%
<YYINITIAL> {START} { System.out.println(TEXT_COMAND + ", " + hello + ", " + why + ", " + what + ", " + NOOOO); return null;}
<YYINITIAL> {PACKAGE} { return new Token(Token.PACKAGE,yytext());}
<YYINITIAL> {COMMENT} {}
<YYINITIAL> {NEWLINE} {return new Token(Token.NEWLINE,yytext());}
<YYINITIAL> {BEGIN_DOCUMENT} {return new Token(Token.BEGIN, yytext());}
<YYINITIAL> {END_DOCUMENT} {return new Token(Token.END, yytext());}
<YYINITIAL> {TITLE} {yybegin(TEXT_COMAND); return new Token(Token.TITLE, yytext());}
<YYINITIAL> {SUBTITLE} {yybegin(TEXT_COMAND); return new Token(Token.SUB_TITLE, yytext());}
<YYINITIAL> {DATE} {yybegin(TEXT_COMAND); return new Token(Token.DATE, yytext());}
<YYINITIAL> {MAKETITLE} {return new Token(Token.MAKE, yytext());}
<YYINITIAL> {SECTION} {yybegin(TEXT_COMAND); return new Token(Token.SECTION, yytext());}
<YYINITIAL> {TEXTBF} {yybegin(TEXT_COMAND); return new Token(Token.BF, yytext());}
<TEXT_COMAND> {TEXT} {yybegin(YYINITIAL); return new Token(Token.TEXT, yytext());}
<YYINITIAL> {BODY} {return new Token(Token.BODY, yytext());}
<YYINITIAL> . {
	//return new Token(Token.ERROR, "Invalid input: " + yytext());
}
